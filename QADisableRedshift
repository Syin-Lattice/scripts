import boto3  
import botocore
import os
from slackclient import SlackClient


REGION = 'us-east-1'
source = boto3.client('redshift', region_name=REGION)
Group=['sg-0fdf44e4c70a6688f']

def DisableRedShift():       
    
      Redshift_parsed = source.describe_clusters()
      Redshiftinstances = Redshift_parsed['Clusters']
      print (len(Redshift_parsed))
      #print (len(Redshiftinstances))
      x=0
      redshiftInstances=[]

      while(x<len(Redshiftinstances)):

             redshiftInstance = (Redshift_parsed['Clusters'][x]['ClusterIdentifier'])
             print (redshiftInstance)
             try:
                  response = source.modify_cluster(ClusterIdentifier=redshiftInstance, VpcSecurityGroupIds=Group)
                  TriggerAlert(redshiftInstance)
                  print (response)
             except botocore.exceptions.ClientError as e:
                      raise Exception("Could create cache cluster: %s" % e)
                      
             x=x+1

def TriggerAlert(redshiftInstance):
    slack_client = SlackClient('xoxp-3476656916-50579388403-388759496705-dbe71886b6d72fa0f634e74e55b5847e')
    slack_client.api_call(
                          "chat.postMessage",
                          channel="C1SSLBB9C",
                          text="The traffic of rds instance" + redshiftInstance+ "is disabled",
                          username='QADisableRDSAlert'
                          )

       

     
if __name__ == '__main__':
       DisableRedShift()
       
   
